[{"id":0,"title":"Hello world!","content":"#\n\n\nStart#\n\nWrite something to build your own docs! 🎁","routePath":"/hello","lang":"","toc":[{"text":"Start","id":"start","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"学习笔记","content":"#\n\n欢迎来到我的博客！这里记录了我在学习过程中的心得体会和技术积累。\n\n\n关于这些笔记#\n\n这些笔记是我在学习过程中的总结和思考。我会不断更新和完善这些内容，希望能够帮助到同样在学习的你。如果你发现任何问题或有任何建议，欢迎与我交流。","routePath":"/notes/","lang":"","toc":[{"text":"关于这些笔记","id":"关于这些笔记","depth":2,"charIndex":37}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"React 基础","content":"#\n\n\n认识语法#\n\n\nJSX 语法#\n\n * JSX 是 JavaScript 的语法扩展，允许在 JavaScript 中编写类似 HTML 的代码\n * JSX 会被编译为 React.createElement() 调用\n * JSX 中使用大括号 嵌入 JavaScript 表达式\n\n\n\n\n组件基础#\n\n * 函数组件：使用函数声明的简单组件\n * 类组件：使用 class 关键字声明，继承自 React.Component\n * 组件名称必须以大写字母开头\n\n\n\n\nProps 和 State#\n\nProps#\n\n * Props 是只读的，用于组件间数据传递\n * Props 可以传递任意类型的数据，包括函数和 JSX\n\n\n\nState#\n\n * State 用于管理组件内部状态\n * 使用 useState Hook 或 class 组件中的 setState 更新状态\n * State 更新可能是异步的\n\n\n\n\n生命周期#\n\n函数组件（Hooks）#\n\n * useEffect：处理副作用\n * useLayoutEffect：同步执行副作用\n * 自定义 Hooks：复用状态逻辑\n\n\n\n类组件#\n\n * 挂载阶段：constructor -> render -> componentDidMount\n * 更新阶段：render -> componentDidUpdate\n * 卸载阶段：componentWillUnmount\n\n\n\n\n事件处理#\n\n * React 事件使用驼峰命名\n * 事件处理器接收合成事件对象（SyntheticEvent）\n * 注意绑定 this 的问题（箭头函数或 bind）\n\n\n\n\n条件渲染#\n\n * 使用 if 语句或三元运算符\n * 使用逻辑运算符 &&\n * 防止组件返回 null 导致的问题\n\n\n\n\n列表渲染#\n\n * 使用 map 方法渲染列表\n * key 属性的重要性和正确使用\n * 避免使用索引作为 key\n\n","routePath":"/notes/react/React","lang":"","toc":[{"text":"认识语法","id":"认识语法","depth":2,"charIndex":3},{"text":"JSX 语法","id":"jsx-语法","depth":3,"charIndex":11},{"text":"组件基础","id":"组件基础","depth":3,"charIndex":150},{"text":"Props 和 State","id":"props-和-state","depth":3,"charIndex":240},{"text":"Props","id":"props","depth":4,"charIndex":256},{"text":"State","id":"state","depth":4,"charIndex":322},{"text":"生命周期","id":"生命周期","depth":3,"charIndex":419},{"text":"函数组件（Hooks）","id":"函数组件hooks","depth":4,"charIndex":426},{"text":"类组件","id":"类组件","depth":4,"charIndex":509},{"text":"事件处理","id":"事件处理","depth":3,"charIndex":636},{"text":"条件渲染","id":"条件渲染","depth":3,"charIndex":727},{"text":"列表渲染","id":"列表渲染","depth":3,"charIndex":791}],"domain":"","frontmatter":{},"version":""}]