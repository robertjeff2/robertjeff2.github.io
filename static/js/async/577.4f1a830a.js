"use strict";(self.webpackChunkjeff_blog=self.webpackChunkjeff_blog||[]).push([["577"],{87:function(e,n,d){d.r(n),d.d(n,{default:()=>h});var i=d(5893),a=d(65);function r(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",blockquote:"blockquote"},(0,a.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"vue-原理与源码深入",children:["VUE 原理与源码深入",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vue-原理与源码深入",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"keep-alive-原理",children:["keep-alive 原理",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#keep-alive-原理",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"内置组件,用来在多个组件间动态切换时缓存被移除的组件实例\n属性 include :缓存的组件名称 支持字符串正则数组 exclude:不缓存的组件 prop 来定制行为\n传入 max prop 来限制可被缓存的最大组件实例数\n指定 max 后内部执行类 LRU 算法: 如果缓存的实例数量即将超过指定的 max,则最久没有访问的缓存实例被销毁 底层原理 set?\n生命周期勾子 onActivated 和 onDeacticated 注册两个状态的生命周期勾子,只有开启了才会增加"}),"\n",(0,i.jsxs)(n.h2,{id:"虚拟-dom-diff",children:["虚拟 DOM DIFF",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#虚拟-dom-diff",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["key 值 不能去重复\nvue2:双端 diff 算法:头和头 尾和尾 头和尾 尾和头\n没有给",(0,i.jsx)(n.code,{children:"key"}),"的 diff 算法: for 循环重新渲染元素 替换掉,如果有多的就会新增,如果减少了就会删除,有不必要的更新,没有复用\n有",(0,i.jsx)(n.code,{children:"key"})," 五步走, isSameNodeType 判断是否是同一个类型且 key 相等,先进行前序对比 如果有存在不同的 就跳出循环进行尾序对比,比 vue2 少了 交叉对比,如果有新的节点 就挂在 如果旧节点多旧卸载"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"特殊乱序情况: 1.构建新节点的映射关系 keyToNewIndexMap 2.记录新节点在旧节点中的位置数组 3.如果出现交叉求最长递增子序列(贪心+二分查找) 4.如果当前遍历的节点不在子序列中说明要进行移动"}),"\n"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}let h=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["notes%2Fvue%2Fprinciple.md"]={toc:[{text:"keep-alive 原理",id:"keep-alive-原理",depth:2},{text:"虚拟 DOM DIFF",id:"虚拟-dom-diff",depth:2}],title:"VUE 原理与源码深入",headingTitle:"VUE 原理与源码深入",frontmatter:{}}}}]);