"use strict";(self.webpackChunkjeff_blog=self.webpackChunkjeff_blog||[]).push([["481"],{8273:function(n,e,i){i.r(e),i.d(e,{default:()=>a});var l=i(5893),r=i(65);function s(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",ul:"ul",li:"li",ol:"ol",pre:"pre",code:"code"},(0,r.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(e.h1,{id:"简历涉及知识点准备",children:["简历涉及知识点准备",(0,l.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#简历涉及知识点准备",children:"#"})]}),"\n",(0,l.jsxs)(e.h2,{id:"1-性能优化的前因后果说清楚",children:["1. 性能优化的前因后果说清楚",(0,l.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-性能优化的前因后果说清楚",children:"#"})]}),"\n",(0,l.jsx)(e.p,{children:"我使用 F12 开发者工具进入 LightHouse 工具分析了网站性能指标,指标包含了性能指标（Performance）、可访问性（Accessibility）、最佳实践（Best Practices）和 SEO（Search Engine Optimization）。\nFCP 时间比较场,所以这次的目的就是优化 FCP 时间。\nFCP 时间是指浏览器从开始加载页面到页面内容首次开始绘制的时间。\nFCP 时间越短，用户体验越好。\nFCP 时间过长，会导致用户等待时间过长，影响用户体验。\n使用的方式:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"使用图片懒加载：通过使用 JavaScript 或者在 HTML 属性中设置 onload 事件，当图片加载完成时再显示，这样可以减少初始化时的性能开销"}),"\n",(0,l.jsx)(e.li,{children:"使用预加载：通过在页面加载时预先加载一些数据和资源，当用户访问时可以更快地渲染。"}),"\n",(0,l.jsx)(e.li,{children:"优化列表和数组操作：使用现代前端框架提供的列表和数组操作方法，可以减少代码量，提高性能。"}),"\n",(0,l.jsx)(e.li,{children:"使用 CDN：通过将静态资源部署到 CDN 服务器上，可以提高用户体验，减少网络传输时的时间开销。"}),"\n",(0,l.jsx)(e.li,{children:"使用事件代理：将事件监听器添加到父元素上，可以减少事件监听器的数量，提高性能。"}),"\n",(0,l.jsx)(e.li,{children:"优化 DOM 操作：在使用 JavaScript 操作 DOM 时，尽量减少操作的次数和复杂度，以提高性能。"}),"\n",(0,l.jsx)(e.li,{children:"图片压缩：通过压缩图片的大小，可以减少网络传输时的时间开销。"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"细说图片懒加载:\n图片懒加载是一种优化技术，它的目的是在用户滚动页面时，只有当图片进入可视区域时才加载图片，从而减少页面加载时间和带宽消耗。\n图片懒加载的实现方式有很多种，其中比较常用的是使用 JavaScript 和 onload 事件。\n具体实现步骤如下："}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"在 HTML 中，将图片的 src 属性设置为一个占位图，例如："}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-html",children:'<img src="loading.gif" data-src="real-image.jpg" alt="Real Image" />\n'})}),"\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsx)(e.li,{children:"在 JavaScript 中，使用 onload 事件监听图片加载完成的事件，当图片加载完成时，将占位图的 src 属性替换为真实的图片地址，例如："}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-js",children:"var images = document.querySelectorAll('img');\nfor (var i = 0; i < images.length; i++) {\n  images[i].onload = function () {\n    this.src = this.dataset.src;\n  };\n}\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsx)(e.li,{children:"怎么去封装一个组件"}),"\n",(0,l.jsx)(e.li,{children:"在团队怎么去践行前端工程化"}),"\n",(0,l.jsx)(e.li,{children:"git rebase 和 git merge 的区别"}),"\n",(0,l.jsx)(e.li,{children:"在前端层面怎么保障整个系统的稳定性\n○ code review\n○ 编写代码层面的规范\n○ 让错误可控，组件内的错误不至于导致整个页面发生崩溃\n○ 减少代码冗余，提高代码复用率，便于维护\n○ 需求开发前编写技术文档"}),"\n",(0,l.jsx)(e.li,{children:"权限控制方案：基于角色 and 基于用户，优劣点分别是什么"}),"\n",(0,l.jsx)(e.li,{children:"RSA 和浏览器指纹风控分别是什么"}),"\n",(0,l.jsx)(e.li,{children:"keep-alive 的原理是什么【GPT】"}),"\n",(0,l.jsx)(e.li,{children:"对于多数据节点，模型会发生卡顿的问题，有没有做什么优化"}),"\n",(0,l.jsx)(e.li,{children:"Websocket 的心跳机制"}),"\n",(0,l.jsx)(e.li,{children:"Websocket 和 http 的区别"}),"\n",(0,l.jsx)(e.li,{children:"垃圾回收机制\na. 引用计数\nb. 标记清除"}),"\n",(0,l.jsx)(e.li,{children:"一般怎么进行技术选型呢\n○ 社区活跃度\n○ 同类型的技术对比"}),"\n",(0,l.jsx)(e.li,{children:"实时获取怎么做的"}),"\n",(0,l.jsx)(e.li,{children:"状态管理库 Vuex 的原理"}),"\n",(0,l.jsx)(e.li,{children:"Vue 中组件进行通信方案"}),"\n",(0,l.jsx)(e.li,{children:"hash 路由和 history 的区别"}),"\n"]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(s,{...n})}):s(n)}let a=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["notes%2Finterview%2Fdeepresume.md"]={toc:[{text:"1. 性能优化的前因后果说清楚",id:"1-性能优化的前因后果说清楚",depth:2}],title:"简历涉及知识点准备",headingTitle:"简历涉及知识点准备",frontmatter:{}}}}]);