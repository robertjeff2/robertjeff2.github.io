"use strict";(self.webpackChunkjeff_blog=self.webpackChunkjeff_blog||[]).push([["684"],{4751:function(n,e,s){s.r(e),s.d(e,{default:()=>c});var i=s(5893),l=s(65);function r(n){let e=Object.assign({h1:"h1",a:"a",h3:"h3",ul:"ul",li:"li",code:"code",h2:"h2",ol:"ol",p:"p",strong:"strong",pre:"pre"},(0,l.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"vue-in-one-page",children:["Vue in One Page",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue-in-one-page",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"vue-实例属性和方法",children:["Vue 实例属性和方法",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue-实例属性和方法",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"$data"}),": 获取数据对象"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"$props"}),": 获取传入的 props"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"$el"}),": 获取根 DOM 元素"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"$refs"}),": 获取注册过 ref 的所有 DOM 元素或组件实例"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"$watch"}),": 观察数据变化"]}),"\n"]}),"\n",(0,i.jsxs)(e.h2,{id:"生命周期",children:["生命周期",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#生命周期",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"vue2-生命周期钩子",children:["Vue2 生命周期钩子",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue2-生命周期钩子",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"创建阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"beforeCreate"}),": 实例初始化之后，数据观测和事件配置之前调用"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"created"}),": 实例创建完成后调用，此时可以访问数据"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"挂载阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"beforeMount"}),": 挂载开始之前调用"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"mounted"}),": 挂载完成后调用，可以访问 DOM"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"更新阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"beforeUpdate"}),": 数据更新时调用，发生在虚拟 DOM 打补丁之前"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"updated"}),": 由于数据更改导致的虚拟 DOM 重新渲染和打补丁之后调用"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"销毁阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"beforeDestroy"}),": 实例销毁之前调用"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"destroyed"}),": 实例销毁后调用"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"vue3-生命周期钩子",children:["Vue3 生命周期钩子",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue3-生命周期钩子",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"创建阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"setup"}),": 开始创建组件之前执行，在 beforeCreate 和 created 之前执行"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"挂载阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onBeforeMount"}),": 挂载开始之前调用"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onMounted"}),": 挂载完成后调用"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"更新阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onBeforeUpdate"}),": 数据更新时调用，发生在虚拟 DOM 打补丁之前"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onUpdated"}),": 数据更新后调用"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"销毁阶段"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onBeforeUnmount"}),": 实例销毁之前调用（替代 beforeDestroy）"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"onUnmounted"}),": 实例销毁后调用（替代 destroyed）"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"生命周期图示",children:["生命周期图示",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#生命周期图示",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"创建 → beforeCreate → created → beforeMount → mounted\n      ↓                                       ↓\n      数据更新 → beforeUpdate → updated        |\n      ↓                                       ↓\n      beforeDestroy → destroyed\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"模板语法",children:["模板语法",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#模板语法",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"插值",children:["插值",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#插值",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["文本插值：",(0,i.jsx)(e.code,{children:"{{ message }}"})]}),"\n",(0,i.jsxs)(e.li,{children:["HTML：",(0,i.jsx)(e.code,{children:'v-html="rawHtml"'})]}),"\n",(0,i.jsxs)(e.li,{children:["属性：",(0,i.jsx)(e.code,{children:'v-bind:id="dynamicId"'})," 或简写 ",(0,i.jsx)(e.code,{children:':id="dynamicId"'})]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"指令",children:["指令",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#指令",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"条件渲染"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div v-if="seen">现在你看到我了</div>\n<div v-else-if="type === \'B\'">B</div>\n<div v-else>否则显示我</div>\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"列表渲染"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<ul>\n  <li v-for="item in items" :key="item.id">{{ item.text }}</li>\n</ul>\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"事件处理"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<button v-on:click="doSomething">点击我</button>\n\x3c!-- 简写 --\x3e\n<button @click="doSomething">点击我</button>\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"表单输入绑定"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<input v-model="message" />\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h2,{id:"计算属性与侦听器",children:["计算属性与侦听器",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#计算属性与侦听器",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"计算属性",children:["计算属性",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#计算属性",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"computed: {\n  fullName: {\n    get() {\n      return this.firstName + ' ' + this.lastName\n    },\n    set(newValue) {\n      const names = newValue.split(' ')\n      this.firstName = names[0]\n      this.lastName = names[names.length - 1]\n    }\n  }\n}\n"})}),"\n",(0,i.jsxs)(e.h3,{id:"侦听器",children:["侦听器",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#侦听器",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"watch: {\n  question: {\n    handler(newQuestion, oldQuestion) {\n      this.answer = '等待输入停止...'\n      this.debouncedGetAnswer()\n    },\n    immediate: true, // 立即执行\n    deep: true // 深度监听\n  }\n}\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"class-与-style-绑定",children:["Class 与 Style 绑定",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#class-与-style-绑定",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"class-绑定",children:["Class 绑定",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#class-绑定",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'\x3c!-- 对象语法 --\x3e\n<div :class="{ active: isActive, \'text-danger\': hasError }"></div>\n\n\x3c!-- 数组语法 --\x3e\n<div :class="[activeClass, errorClass]"></div>\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"style-绑定",children:["Style 绑定",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#style-绑定",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'\x3c!-- 对象语法 --\x3e\n<div :style="{ color: activeColor, fontSize: fontSize + \'px\' }"></div>\n\n\x3c!-- 数组语法 --\x3e\n<div :style="[baseStyles, overridingStyles]"></div>\n'})}),"\n",(0,i.jsxs)(e.h2,{id:"组件系统",children:["组件系统",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#组件系统",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"组件注册与使用",children:["组件注册与使用",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#组件注册与使用",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 全局注册\nVue.component('my-component', {\n  template: '<div>组件内容</div>'\n});\n\n// 局部注册\nconst Child = {\n  template: '<div>子组件</div>'\n};\n\nnew Vue({\n  components: {\n    'child-component': Child\n  }\n});\n"})}),"\n",(0,i.jsxs)(e.h3,{id:"props-与-events",children:["Props 与 Events",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#props-与-events",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// Props 定义\nexport default {\n  props: {\n    title: {\n      type: String,\n      required: true,\n      default: '默认标题'\n    }\n  },\n  methods: {\n    // 触发事件\n    handleClick() {\n      this.$emit('custom-event', { data: 'eventData' });\n    }\n  }\n};\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"响应式原理",children:["响应式原理",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#响应式原理",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"vue2-响应式原理",children:["Vue2 响应式原理",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue2-响应式原理",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["使用 ",(0,i.jsx)(e.code,{children:"Object.defineProperty"})," 实现数据劫持","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 简化版响应式实现\nfunction defineReactive(obj, key, val) {\n  const dep = new Dep(); // 依赖收集器\n  Object.defineProperty(obj, key, {\n    get() {\n      if (Dep.target) {\n        dep.depend(); // 收集依赖\n      }\n      return val;\n    },\n    set(newVal) {\n      if (newVal === val) return;\n      val = newVal;\n      dep.notify(); // 通知更新\n    }\n  });\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["主要特点：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"对象属性必须提前声明"}),"\n",(0,i.jsx)(e.li,{children:"不能检测数组长度变化"}),"\n",(0,i.jsx)(e.li,{children:"不能检测对象属性的添加和删除"}),"\n",(0,i.jsx)(e.li,{children:"需要遍历对象所有属性"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["解决方案：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["使用 ",(0,i.jsx)(e.code,{children:"Vue.set()"})," 或 ",(0,i.jsx)(e.code,{children:"this.$set()"})," 添加响应式属性"]}),"\n",(0,i.jsxs)(e.li,{children:["使用 ",(0,i.jsx)(e.code,{children:"Vue.delete()"})," 或 ",(0,i.jsx)(e.code,{children:"this.$delete()"})," 删除属性"]}),"\n",(0,i.jsx)(e.li,{children:"使用数组方法：push、pop、shift、unshift、splice、sort、reverse"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["源码实现关键点：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Observer：将数据对象的所有属性转换为 getter/setter"}),"\n",(0,i.jsx)(e.li,{children:"Dep：依赖收集器，存储所有依赖（Watcher）"}),"\n",(0,i.jsx)(e.li,{children:"Watcher：订阅者，负责触发视图更新"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"vue3-响应式原理",children:["Vue3 响应式原理",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#vue3-响应式原理",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["使用 ",(0,i.jsx)(e.code,{children:"Proxy"})," 实现响应式系统","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 简化版响应式实现\nfunction reactive(target) {\n  return new Proxy(target, {\n    get(target, key, receiver) {\n      track(target, key); // 依赖收集\n      const res = Reflect.get(target, key, receiver);\n      return typeof res === 'object' ? reactive(res) : res;\n    },\n    set(target, key, value, receiver) {\n      const oldValue = target[key];\n      const result = Reflect.set(target, key, value, receiver);\n      if (oldValue !== value) {\n        trigger(target, key); // 触发更新\n      }\n      return result;\n    }\n  });\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["主要特点：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"可以监听动态添加的属性"}),"\n",(0,i.jsx)(e.li,{children:"可以监听数组的索引和长度变化"}),"\n",(0,i.jsx)(e.li,{children:"可以监听删除的属性"}),"\n",(0,i.jsx)(e.li,{children:"不需要遍历对象所有属性"}),"\n",(0,i.jsx)(e.li,{children:"支持 Map、Set、WeakMap、WeakSet"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["性能优势：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"初始化性能更好，不需要递归遍历"}),"\n",(0,i.jsx)(e.li,{children:"内存占用更少"}),"\n",(0,i.jsx)(e.li,{children:"可以懒处理嵌套对象"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["响应式 API：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"reactive：深层响应式代理"}),"\n",(0,i.jsx)(e.li,{children:"ref：处理基本类型的响应式"}),"\n",(0,i.jsx)(e.li,{children:"readonly：创建只读代理"}),"\n",(0,i.jsx)(e.li,{children:"shallowReactive：浅层响应式"}),"\n",(0,i.jsx)(e.li,{children:"shallowRef：浅层 ref"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"常见面试题解答",children:["常见面试题解答",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#常见面试题解答",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue2 和 Vue3 响应式的区别？"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"实现原理不同：Vue2 使用 Object.defineProperty，Vue3 使用 Proxy"}),"\n",(0,i.jsx)(e.li,{children:"性能差异：Vue3 初始化更快，内存占用更少"}),"\n",(0,i.jsx)(e.li,{children:"功能限制：Vue2 无法监听属性添加/删除，Vue3 可以"}),"\n",(0,i.jsx)(e.li,{children:"数组处理：Vue2 需要特殊处理数组方法，Vue3 可以直接监听"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"为什么 Vue2 不能检测数组长度变化？"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Object.defineProperty 不能监听数组长度的变化"}),"\n",(0,i.jsx)(e.li,{children:"Vue2 通过重写数组方法来实现响应式"}),"\n",(0,i.jsx)(e.li,{children:"直接通过索引修改数组不会触发更新"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 为什么使用 Proxy？"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"可以直接监听对象而非属性"}),"\n",(0,i.jsx)(e.li,{children:"可以监听动态添加的属性"}),"\n",(0,i.jsx)(e.li,{children:"可以监听数组的变化"}),"\n",(0,i.jsx)(e.li,{children:"可以监听对象的删除操作"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue.set 的实现原理？"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1, val);\n    return val;\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val;\n  }\n  const ob = target.__ob__;\n  if (!ob) {\n    target[key] = val;\n    return val;\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val;\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 ref 和 reactive 的区别？"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"ref 用于基本类型，reactive 用于对象"}),"\n",(0,i.jsx)(e.li,{children:"ref 需要.value 访问，reactive 直接访问"}),"\n",(0,i.jsx)(e.li,{children:"ref 可以用于模板，不需要.value"}),"\n",(0,i.jsx)(e.li,{children:"reactive 不能用于基本类型"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h2,{id:"高频面试题",children:["高频面试题",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#高频面试题",children:"#"})]}),"\n",(0,i.jsxs)(e.h3,{id:"组件通信",children:["组件通信",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#组件通信",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"父子组件通信"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Props / $emit"}),"\n",(0,i.jsx)(e.li,{children:"$refs / $parent"}),"\n",(0,i.jsx)(e.li,{children:"v-model / .sync (Vue2)"}),"\n",(0,i.jsx)(e.li,{children:"provide / inject"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"兄弟组件通信"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"EventBus"}),"\n",(0,i.jsx)(e.li,{children:"Vuex / Pinia"}),"\n",(0,i.jsx)(e.li,{children:"通过共同的父组件"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"跨层级组件通信"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Vuex / Pinia"}),"\n",(0,i.jsx)(e.li,{children:"provide / inject"}),"\n",(0,i.jsx)(e.li,{children:"EventBus"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"组件复用",children:["组件复用",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#组件复用",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue2 复用方式"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// Mixin\nconst myMixin = {\n  data() {\n    return { count: 0 };\n  },\n  methods: {\n    increment() {\n      this.count++;\n    }\n  }\n};\n\n// HOC\nfunction withLog(WrappedComponent) {\n  return {\n    mounted() {\n      console.log('组件已挂载');\n    },\n    props: WrappedComponent.props,\n    render(h) {\n      return h(WrappedComponent, {\n        props: this.$props\n      });\n    }\n  };\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 复用方式"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// Composition API\nfunction useCounter() {\n  const count = ref(0);\n  function increment() {\n    count.value++;\n  }\n  return { count, increment };\n}\n\n// 在组件中使用\nexport default {\n  setup() {\n    const { count, increment } = useCounter();\n    return { count, increment };\n  }\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"核心概念对比",children:["核心概念对比",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#核心概念对比",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"选项式 API vs 组合式 API"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["选项式 API：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"按 options 组织代码"}),"\n",(0,i.jsx)(e.li,{children:"适合简单组件"}),"\n",(0,i.jsx)(e.li,{children:"学习成本低"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["组合式 API：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"按功能组织代码"}),"\n",(0,i.jsx)(e.li,{children:"更好的代码复用"}),"\n",(0,i.jsx)(e.li,{children:"TypeScript 支持更好"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"响应式系统"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Vue2：Object.defineProperty","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"需要遍历对象属性"}),"\n",(0,i.jsx)(e.li,{children:"不能监听数组长度变化"}),"\n",(0,i.jsx)(e.li,{children:"不能监听对象属性添加/删除"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Vue3：Proxy","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"可以监听整个对象"}),"\n",(0,i.jsx)(e.li,{children:"可以监听数组变化"}),"\n",(0,i.jsx)(e.li,{children:"可以监听属性添加/删除"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"性能优化建议",children:["性能优化建议",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#性能优化建议",children:"#"})]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue2 优化"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"使用 Object.freeze() 冻结不需要响应式的数据"}),"\n",(0,i.jsx)(e.li,{children:"使用 v-show 代替频繁切换的 v-if"}),"\n",(0,i.jsx)(e.li,{children:"合理使用 computed 缓存"}),"\n",(0,i.jsx)(e.li,{children:"避免深度监听大数据"}),"\n",(0,i.jsx)(e.li,{children:"使用函数式组件"}),"\n",(0,i.jsx)(e.li,{children:"路由懒加载"}),"\n",(0,i.jsx)(e.li,{children:"第三方库按需引入"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 优化"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"使用 shallowRef 和 shallowReactive 处理大数据"}),"\n",(0,i.jsx)(e.li,{children:"使用 markRaw 标记不需要响应式的数据"}),"\n",(0,i.jsx)(e.li,{children:"合理使用 computed 和 watchEffect"}),"\n",(0,i.jsx)(e.li,{children:"使用 v-memo 缓存模板"}),"\n",(0,i.jsx)(e.li,{children:"使用 Suspense 和异步组件"}),"\n",(0,i.jsx)(e.li,{children:"动态导入组件"}),"\n",(0,i.jsx)(e.li,{children:"Tree-shaking 优化"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"虚拟-dom",children:["虚拟 DOM",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#虚拟-dom",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"虚拟 DOM 树的构建"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"用 JavaScript 对象描述 DOM 结构"}),"\n",(0,i.jsx)(e.li,{children:"通过 render 函数生成虚拟 DOM 树"}),"\n",(0,i.jsx)(e.li,{children:"数据变化时生成新的虚拟 DOM 树"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Diff 算法实现"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue2 双端比较算法"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"同时从新旧节点的两端开始比较"}),"\n",(0,i.jsx)(e.li,{children:"四个指针：新头、新尾、旧头、旧尾"}),"\n",(0,i.jsxs)(e.li,{children:["比较策略：","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 四种比较方式\noldStart vs newStart\noldEnd vs newEnd\noldStart vs newEnd\noldEnd vs newStart\n"})}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"如果四种比较都未命中，则按 key 比较"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 快速 Diff 算法"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"借鉴了 ivi 和 inferno 的算法"}),"\n",(0,i.jsx)(e.li,{children:"相同的前置和后置节点的预处理"}),"\n",(0,i.jsx)(e.li,{children:"最长递增子序列算法优化节点移动"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 前置节点预处理\nwhile (i <= e1 && i <= e2) {\n  const n1 = c1[i];\n  const n2 = c2[i];\n  if (isSameVNodeType(n1, n2)) {\n    patch(n1, n2);\n  } else {\n    break;\n  }\n  i++;\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"性能优化策略"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"使用唯一 key 进行节点复用"}),"\n",(0,i.jsx)(e.li,{children:"避免无谓的节点更新"}),"\n",(0,i.jsx)(e.li,{children:"采用异步更新"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"虚拟-dom-1",children:["虚拟 DOM",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#虚拟-dom-1",children:"#"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"虚拟 DOM 树的构建"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"用 JavaScript 对象描述 DOM 结构"}),"\n",(0,i.jsx)(e.li,{children:"通过 render 函数生成虚拟 DOM 树"}),"\n",(0,i.jsx)(e.li,{children:"数据变化时生成新的虚拟 DOM 树"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Diff 算法实现"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue2 双端比较算法"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"同时从新旧节点的两端开始比较"}),"\n",(0,i.jsx)(e.li,{children:"四个指针：新头、新尾、旧头、旧尾"}),"\n",(0,i.jsxs)(e.li,{children:["比较策略：","\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 四种比较方式\noldStart vs newStart\noldEnd vs newEnd\noldStart vs newEnd\noldEnd vs newStart\n"})}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"如果四种比较都未命中，则按 key 比较"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Vue3 快速 Diff 算法"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"借鉴了 ivi 和 inferno 的算法"}),"\n",(0,i.jsx)(e.li,{children:"相同的前置和后置节点的预处理"}),"\n",(0,i.jsx)(e.li,{children:"最长递增子序列算法优化节点移动"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"// 前置节点预处理\nwhile (i <= e1 && i <= e2) {\n  const n1 = c1[i];\n  const n2 = c2[i];\n  if (isSameVNodeType(n1, n2)) {\n    patch(n1, n2);\n  } else {\n    break;\n  }\n  i++;\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"性能优化策略"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"使用唯一 key 进行节点复用"}),"\n",(0,i.jsx)(e.li,{children:"避免无谓的节点更新"}),"\n",(0,i.jsx)(e.li,{children:"采用异步更新"}),"\n"]}),"\n"]}),"\n"]})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(r,{...n})}):r(n)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["notes%2Fvue%2Findex.md"]={toc:[{text:"Vue 实例属性和方法",id:"vue-实例属性和方法",depth:3},{text:"生命周期",id:"生命周期",depth:2},{text:"Vue2 生命周期钩子",id:"vue2-生命周期钩子",depth:3},{text:"Vue3 生命周期钩子",id:"vue3-生命周期钩子",depth:3},{text:"生命周期图示",id:"生命周期图示",depth:3},{text:"模板语法",id:"模板语法",depth:2},{text:"插值",id:"插值",depth:3},{text:"指令",id:"指令",depth:3},{text:"计算属性与侦听器",id:"计算属性与侦听器",depth:2},{text:"计算属性",id:"计算属性",depth:3},{text:"侦听器",id:"侦听器",depth:3},{text:"Class 与 Style 绑定",id:"class-与-style-绑定",depth:2},{text:"Class 绑定",id:"class-绑定",depth:3},{text:"Style 绑定",id:"style-绑定",depth:3},{text:"组件系统",id:"组件系统",depth:2},{text:"组件注册与使用",id:"组件注册与使用",depth:3},{text:"Props 与 Events",id:"props-与-events",depth:3},{text:"响应式原理",id:"响应式原理",depth:2},{text:"Vue2 响应式原理",id:"vue2-响应式原理",depth:3},{text:"Vue3 响应式原理",id:"vue3-响应式原理",depth:3},{text:"常见面试题解答",id:"常见面试题解答",depth:3},{text:"高频面试题",id:"高频面试题",depth:2},{text:"组件通信",id:"组件通信",depth:3},{text:"组件复用",id:"组件复用",depth:3},{text:"核心概念对比",id:"核心概念对比",depth:3},{text:"性能优化建议",id:"性能优化建议",depth:3},{text:"虚拟 DOM",id:"虚拟-dom",depth:3},{text:"虚拟 DOM",id:"虚拟-dom-1",depth:3}],title:"Vue in One Page",headingTitle:"Vue in One Page",frontmatter:{}}}}]);